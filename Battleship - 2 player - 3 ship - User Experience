import time

BOARD_SIZE = 5

def print_board(board):
    """Display the board."""
    for row in board:
        print(" ".join(row))
    print()

def initialize_board(size):
    """Create a new board."""
    return [["O"] * size for _ in range(size)]

def print_instructions():
    """Print the game instructions."""
    print("""
Welcome to Battleship!

Instructions:
1. Each player will place a set number of ships on their board.
2. Players will take turns guessing where the opponent's ships are.
3. If a player guesses correctly, they will sink one of the opponent's ships.
4. The first player to sink all of the opponent's ships wins!

Board Symbols:
O - Empty
S - Your Ship
X - Ship that has been hit
- - Missed Guess

Let's start the game!
    """)

def place_ship(board, number_of_ships=3):
    """Allow a player to place ships."""
    ships_placed = 0
    while ships_placed < number_of_ships:
        print_board(board)
        try:
            ship_row = int(input(f"Choose a row (0 to {BOARD_SIZE-1}) for your ship: "))
            ship_col = int(input(f"Choose a column (0 to {BOARD_SIZE-1}) for your ship: "))

            if 0 <= ship_row < BOARD_SIZE and 0 <= ship_col < BOARD_SIZE and board[ship_row][ship_col] == "O":
                board[ship_row][ship_col] = "S"
                ships_placed += 1
                print(f"Ship {ships_placed} placed!")
                if ships_placed == number_of_ships:
                    break
            else:
                print("Invalid location. Please choose a different spot.")
        except ValueError:
            print("Please enter valid row and column numbers.")

def guess_ship_location(board, opponent_board, number_of_ships=3):
    """Allow a player to guess the opponent's ship locations."""
    print_board(board)
    try:
        guess_row = int(input(f"Guess Row (0 to {BOARD_SIZE-1}): "))
        guess_col = int(input(f"Guess Col (0 to {BOARD_SIZE-1}): "))

        if 0 <= guess_row < BOARD_SIZE and 0 <= guess_col < BOARD_SIZE:
            if opponent_board[guess_row][guess_col] == "S":
                print("Congratulations! You sunk a battleship!")
                board[guess_row][guess_col] = "X"
                opponent_board[guess_row][guess_col] = "X"
                if sum(row.count("S") for row in opponent_board) == 0:  # Check if all ships are sunk
                    return True
            else:
                print("You missed!")
                if board[guess_row][guess_col] != "X":
                    board[guess_row][guess_col] = "-"
        else:
            print("Oops, that's not even in the ocean.")
    except ValueError:
        print("Please enter valid row and column numbers.")

    return False

def main():
    NUMBER_OF_SHIPS = 3  # Modify as needed

    # Print the game instructions
    print_instructions()
    time.sleep(5)  # Give players time to read the instructions
    print("\n" * 50)

    board1 = initialize_board(BOARD_SIZE)
    board2 = initialize_board(BOARD_SIZE)

    # Player 1 places ships
    print("Player 1, place your ships:")
    place_ship(board1, NUMBER_OF_SHIPS)
    print("Switching to Player 2...")
    time.sleep(3)
    print("\n" * 50)

    # Player 2 places ships
    print("Player 2, place your ships:")
    place_ship(board2, NUMBER_OF_SHIPS)
    print("Switching to Player 1...")
    time.sleep(3)
    print("\n" * 50)

    # Game loop
    while True:
        # Player 1's turn to guess
        print("Player 1's turn to guess:")
        if guess_ship_location(board1, board2, NUMBER_OF_SHIPS):
            print("Player 1 wins!")
            break
        print("Switching to Player 2...")
        time.sleep(3)
        print("\n" * 50)

        # Player 2's turn to guess
        print("Player 2's turn to guess:")
        if guess_ship_location(board2, board1, NUMBER_OF_SHIPS):
            print("Player 2 wins!")
            break
        print("Switching to Player 1...")
        time.sleep(3)
        print("\n" * 50)

if __name__ == "__main__":
    main()
